const { DatabaseContext } = require('../connections')
const { dateToText } = require('../../lib/time')

module.exports.insertCharacter = async (character) => {
    const stmt = await DatabaseContext.db.prepare(`INSERT INTO character (
        id,
        name,
        description,
        title,
        gender,
        marriedTo,
        mother,
        father,
        pregnant,
        pregnantTime,
        job,
        race,
        birthDate,
        trait,
        age,
        health,
        maxHealth,
        stamina,
        maxStamina,
        religion,
        personality,
        isAlive,
        diedFrom,
        head,
        weaponHand,
        shieldHand,
        body,
        str,
        vit,
        agi,
        wis,
        int,
        cha,
        luc
    )
    VALUES
    (
        @id,
        @name,
        @description,
        @title,
        @gender,
        @marriedTo,
        @mother,
        @father,
        @pregnant,
        @pregnantTime,
        @job,
        @race,
        @birthDate,
        @trait,
        @age,
        @health,
        @maxHealth,
        @stamina,
        @maxStamina,
        @religion,
        @personality,
        @isAlive,
        @diedFrom,
        @head,
        @weaponHand,
        @shieldHand,
        @body,
        @str,
        @vit,
        @agi,
        @wis,
        @int,
        @cha,
        @luc
    );`)
    await stmt.bind({
        '@id': character.id,
        '@name': character.name,
        '@description': character.description,
        '@title': character.title,
        '@gender': character.gender,
        '@marriedTo': character.marriedTo,
        '@mother': character.mother,
        '@father': character.father,
        '@pregnant': character.pregnant,
        '@pregnantTime': character.pregnantTime,
        '@job': character.job,
        '@race': character.race,
        '@birthDate': dateToText(character.birthDate),
        '@trait': character.trait,
        '@age': character.age,
        '@health': character.health,
        '@maxHealth': character.maxHealth,
        '@stamina': character.stamina,
        '@maxStamina': character.maxStamina,
        '@religion': character.religion,
        '@personality': character.personality,
        '@isAlive': (character.isAlive) ? 1 : 0,
        '@diedFrom': character.diedFrom,
        '@head': character.equipment.head,
        '@weaponHand': character.equipment.weaponHand,
        '@shieldHand': character.equipment.shieldHand,
        '@body': character.equipment.body,
        '@str': character.stats.str,
        '@vit': character.stats.vit,
        '@agi': character.stats.agi,
        '@wis': character.stats.wis,
        '@int': character.stats.int,
        '@cha': character.stats.cha,
        '@luc': character.stats.luc
    })
    await stmt.run()
}